diff --git a/node_modules/node-fetch/lib/index.es.js b/node_modules/node-fetch/lib/index.es.js
index 61906c9..ce4e47f 100644
--- a/node_modules/node-fetch/lib/index.es.js
+++ b/node_modules/node-fetch/lib/index.es.js
@@ -290,6 +290,21 @@ Body.prototype = {
 		return consumeBody.call(this);
 	},
 
+	/**
+	 * Decode response as data URL (non-spec api)
+	 *
+	 * @return  Promise
+	 */
+	dataUrl() {
+		let ct = this.headers && this.headers.get('content-type') || '';
+		return consumeBody.call(this)
+			.then((buffer) => {
+				const base64Str = buffer.toString('base64');
+				const dataUrl = `data:${ct};base64,${base64Str}`;
+				return dataUrl;
+			});
+	},
+
 	/**
   * Decode response as text, while automatically detecting the encoding and
   * trying to decode to UTF-8 (non-spec api)
diff --git a/node_modules/node-fetch/lib/index.js b/node_modules/node-fetch/lib/index.js
index 4b241bf..4c637da 100644
--- a/node_modules/node-fetch/lib/index.js
+++ b/node_modules/node-fetch/lib/index.js
@@ -294,6 +294,21 @@ Body.prototype = {
 		return consumeBody.call(this);
 	},
 
+	/**
+	 * Decode response as data URL (non-spec api)
+	 *
+	 * @return  Promise
+	 */
+	dataUrl() {
+		let ct = this.headers && this.headers.get('content-type') || '';
+		return consumeBody.call(this)
+			.then((buffer) => {
+				const base64Str = buffer.toString('base64');
+				const dataUrl = `data:${ct};base64,${base64Str}`;
+				return dataUrl;
+		  });
+	},
+
 	/**
   * Decode response as text, while automatically detecting the encoding and
   * trying to decode to UTF-8 (non-spec api)
diff --git a/node_modules/node-fetch/lib/index.mjs b/node_modules/node-fetch/lib/index.mjs
index ecf59af..1c89ac8 100644
--- a/node_modules/node-fetch/lib/index.mjs
+++ b/node_modules/node-fetch/lib/index.mjs
@@ -288,6 +288,21 @@ Body.prototype = {
 		return consumeBody.call(this);
 	},
 
+	/**
+	 * Decode response as data URL (non-spec api)
+	 *
+	 * @return  Promise
+	 */
+	dataUrl() {
+		let ct = this.headers && this.headers.get('content-type') || '';
+		return consumeBody.call(this)
+			.then((buffer) => {
+				const base64Str = buffer.toString('base64');
+				const dataUrl = `data:${ct};base64,${base64Str}`;
+				return dataUrl;
+		  });
+	},
+
 	/**
   * Decode response as text, while automatically detecting the encoding and
   * trying to decode to UTF-8 (non-spec api)
